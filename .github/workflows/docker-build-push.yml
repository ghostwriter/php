name: Docker CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 * * * *" # Runs every hour, on the hour.

permissions:
  packages: write

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'schedule' }}

env:
  SUPPORTED_PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
  DEFAULT_IMAGE: "ghcr.io/${{ github.repository_owner }}/php"

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        php-type:
          - cli
          - fpm
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.GHT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GHT }}
          images: ${{ env.DEFAULT_IMAGE }}
          tags: type=raw,value=${{ matrix.php-version }}-${{ matrix.php-type }}

      - name: Build and push PHP ${{ matrix.php-version }}-${{ matrix.php-type }}
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha,scope=${{ matrix.php-version }}-${{ matrix.php-type }}
          cache-to: type=gha,scope=${{ matrix.php-version }}-${{ matrix.php-type }},mode=max
          file: ./${{ matrix.php-version}}/${{ matrix.php-type }}/Dockerfile
          platforms: ${{ env.SUPPORTED_PLATFORMS}}
          push: ${{ github.repository_owner == github.actor }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  composer:
    needs: base
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        php-type:
          - composer
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.GHT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GHT }}
          images: ${{ env.DEFAULT_IMAGE }}
          tags: type=raw,value=${{ matrix.php-version }}-${{ matrix.php-type }}

      - name: Build and push PHP ${{ matrix.php-version }}-${{ matrix.php-type }} image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha,scope=${{ matrix.php-version }}-${{ matrix.php-type }}
          cache-to: type=gha,scope=${{ matrix.php-version }}-${{ matrix.php-type }},mode=max
          file: ./${{ matrix.php-version}}/${{ matrix.php-type }}/Dockerfile
          platforms: ${{ env.SUPPORTED_PLATFORMS}}
          push: ${{ github.repository_owner == github.actor }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build:
    needs: composer
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        php-latest:
          - "8.2"
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.GHT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GHT }}
          images: ${{ env.DEFAULT_IMAGE }}
          tags: type=raw,value=${{ matrix.php-version }}

      - name: Build and push PHP ${{ matrix.php-version }}
        uses: docker/build-push-action@v4
        with:
          cache-from: type=local,src=/tmp/.buildx-cache-build,scope=${{ matrix.php-version }}
          cache-to: type=local,dest=/tmp/.buildx-cache-build-latest,scope=${{ matrix.php-version }},mode=max
          file: ./${{ matrix.php-version}}/${{ matrix.php-type }}/Dockerfile
          platforms: ${{ env.SUPPORTED_PLATFORMS}}
          push: ${{ github.repository_owner == github.actor }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push PHP ${{ matrix.php-version }} as latest
        if: ${{ matrix.php-latest == matrix.php-version}}
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha,scope=${{ matrix.php-version }}
          cache-to: type=gha,scope=${{ matrix.php-version }},mode=max
          file: ./${{ matrix.php-version }}/Dockerfile
          platforms: ${{ env.SUPPORTED_PLATFORMS}}
          push: ${{ github.repository_owner == github.actor }}
          tags: ghcr.io/${{ github.repository_owner }}/php:latest
          labels: ${{ steps.meta.outputs.labels }}
